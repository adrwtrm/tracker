import discord
from discord import app_commands
from discord.ext import commands
import os
import json

intents = discord.Intents.default()
bot = commands.Bot(command_prefix="/", intents=intents)

DATA_FILE = "payment_data.json"

# Load user payment data from file
if os.path.exists(DATA_FILE):
    with open(DATA_FILE, "r") as f:
        user_payment_data = json.load(f)
else:
    user_payment_data = {}

@bot.event
async def on_ready():
    await bot.tree.sync()
    print(f"✅ Logged in as {bot.user}")

@bot.tree.command(name="info", description="Edit or send your payment methods")
@app_commands.describe(action="Type 'edit' to enter methods or 'send' to display them")
async def info(interaction: discord.Interaction, action: str):
    if action.lower() == "edit":
        modal = discord.ui.Modal(title="Enter Payment Methods")

        payment_input = discord.ui.TextInput(
            label="Enter payment methods here:",
            placeholder="e.g. Apple Pay - andtram2006@gmail.com\nVenmo - drewtran1",
            style=discord.TextStyle.paragraph,
            max_length=1000
        )

        modal.add_item(payment_input)

        async def on_submit(interact: discord.Interaction):
            user_payment_data[str(interact.user.id)] = payment_input.value
            with open(DATA_FILE, "w") as f:
                json.dump(user_payment_data, f, indent=4)

            await interact.response.send_message("✅ Your payment methods have been saved!", ephemeral=True)

        modal.on_submit = on_submit
        await interaction.response.send_modal(modal)

    elif action.lower() == "send":
        user_id = str(interaction.user.id)
        raw = user_payment_data.get(user_id)

        if not raw:
            await interaction.response.send_message("❌ You have not added any payment methods yet.", ephemeral=True)
            return

        emoji_map = {
            "apple": "<:applepay:1371549244959490169>",
            "apple pay": "<:applepay:1371549244959490169>",
            "paypal": "<:paypal:1371549468108918905>",
            "venmo": "<:venmo:1371549388605755484>",
            "zelle": "<:zelle:1371549367957192764>",
            "cashapp": "<:cashapp:1371549350710214687>",
            "stripe": "<:stripe:1371549762821689414>",
            "litecoin": "<:litecoin:1371549497389219984>",
            "ltc": "<:litecoin:1371549497389219984>",
            "bitcoin": "<:bitcoin:1371549336772804711>",
            "btc": "<:bitcoin:1371549336772804711>",
            "sol": "<:solana:1371549410005090487>",
            "solana": "<:solana:1371549410005090487>",
        }

        embed = discord.Embed(
            title=f"\U0001F4B0 {interaction.user.display_name}'s Payment Methods",
            description="Below are the saved payment options:",
            color=discord.Color.blurple(),
            timestamp=discord.utils.utcnow()
        )

        embed.set_thumbnail(url="https://cdn-icons-png.flaticon.com/512/954/954591.png")
        embed.set_footer(text="Generated by DrewBot")

        lines = raw.strip().split("\n")
        for line in lines:
            clean_line = line.strip()
            if not clean_line:
                continue

            lower_line = clean_line.lower()
            emoji = None
            for key in emoji_map:
                if key in lower_line:
                    emoji = emoji_map[key]
                    break

            field_name = f"{emoji} {clean_line.split('-')[0].strip()}" if emoji else clean_line.split('-')[0].strip()
            field_value = clean_line.split('-', 1)[-1].strip() if '-' in clean_line else "N/A"

            embed.add_field(name=field_name, value=field_value, inline=False)

        await interaction.response.send_message(embed=embed)

    else:
        await interaction.response.send_message("❌ Invalid action. Use 'edit' or 'send' only.", ephemeral=True)

TOKEN = os.getenv("DISCORD_TOKEN")  # Or replace with hardcoded token
bot.run(TOKEN)
